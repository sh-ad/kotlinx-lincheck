= The execution failed with an unexpected exception =
Execution scenario (parallel part):
| iterator() |

java.lang.RuntimeException: It seems that you use Java 9+ and the code uses Unsafe or similar constructions that are not accessible from unnamed modules.
Please add the following lines to your test running configuration:
--add-opens java.base/jdk.internal.misc=ALL-UNNAMED
--add-exports java.base/jdk.internal.util=ALL-UNNAMED
	at org.jetbrains.kotlinx.lincheck.UtilsKt.wrapInvalidAccessFromUnnamedModuleExceptionWithDescription(Utils.kt:324)
	at org.jetbrains.kotlinx.lincheck.strategy.managed.ManagedStrategy.onFailure(ManagedStrategy.kt:335)
	at org.jetbrains.kotlinx.lincheck.strategy.managed.ManagedStrategyRunner.onFailure(ManagedStrategy.kt:740)
	at org.jetbrains.kotlinx.lincheck.runner.TestThreadExecution118.run(Unknown Source)
	at org.jetbrains.kotlinx.lincheck.runner.FixedActiveThreadsExecutor$testThreadRunnable$1.run(FixedActiveThreadsExecutor.kt:163)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.lang.IllegalAccessError: class org.jetbrains.kotlinx.lincheck.tran$f*rmed.java.util.EnumSet (in unnamed module @0x3029678d) cannot access class jdk.internal.access.SharedSecrets (in module java.base) because module java.base does not export jdk.internal.access to unnamed module @0x3029678d
	at org.jetbrains.kotlinx.lincheck.tran$f*rmed.java.util.EnumSet.getUniverse(EnumSet.java:411)
	at org.jetbrains.kotlinx.lincheck.tran$f*rmed.java.util.EnumSet.noneOf(EnumSet.java:115)
	at org.jetbrains.kotlinx.lincheck.tran$f*rmed.java.util.EnumSet.of(EnumSet.java:264)
	at org.jetbrains.kotlinx.lincheck.tran$f*rmed.java.util.stream.Collectors.<clinit>(Collectors.java:107)
	at shad.Eliseeva_3.second.LockFreeSet.snapshot(LockFreeSet.java:129)
	at shad.Eliseeva_3.second.LockFreeSet.iterator(LockFreeSet.java:92)
	at shad.LincheckLockFreeSetTest.iterator(LincheckLockFreeSetTest.kt:33)
	... 3 more


= The following interleaving leads to the error =
Parallel part trace:
| iterator()                                                                                                |
|   iterator(): threw IllegalAccessError at LincheckLockFreeSetTest.iterator(LincheckLockFreeSetTest.kt:33) |
|     snapshot(): threw IllegalAccessError at LockFreeSet.iterator(LockFreeSet.java:92)                     |
|       getElements(): ArrayList@1 at LockFreeSet.snapshot(LockFreeSet.java:116)                            |
|       getElements(): ArrayList@1 at LockFreeSet.snapshot(LockFreeSet.java:117)                            |
|         root.READ: Node@1 at LockFreeSet.getElements(LockFreeSet.java:136)                                |
|         access$300(Node@1): AtomicMarkableReference@1 at LockFreeSet.getElements(LockFreeSet.java:139)    |
|         get(boolean[]@1): null at LockFreeSet.getElements(LockFreeSet.java:139)                           |
org.jetbrains.kotlinx.lincheck.LincheckAssertionError:
= The execution failed with an unexpected exception =
Execution scenario (parallel part):
| iterator() |

java.lang.RuntimeException: It seems that you use Java 9+ and the code uses Unsafe or similar constructions that are not accessible from unnamed modules.
Please add the following lines to your test running configuration:
--add-opens java.base/jdk.internal.misc=ALL-UNNAMED
--add-exports java.base/jdk.internal.util=ALL-UNNAMED
	at org.jetbrains.kotlinx.lincheck.UtilsKt.wrapInvalidAccessFromUnnamedModuleExceptionWithDescription(Utils.kt:324)
	at org.jetbrains.kotlinx.lincheck.strategy.managed.ManagedStrategy.onFailure(ManagedStrategy.kt:335)
	at org.jetbrains.kotlinx.lincheck.strategy.managed.ManagedStrategyRunner.onFailure(ManagedStrategy.kt:740)
	at org.jetbrains.kotlinx.lincheck.runner.TestThreadExecution118.run(Unknown Source)
	at org.jetbrains.kotlinx.lincheck.runner.FixedActiveThreadsExecutor$testThreadRunnable$1.run(FixedActiveThreadsExecutor.kt:163)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.lang.IllegalAccessError: class org.jetbrains.kotlinx.lincheck.tran$f*rmed.java.util.EnumSet (in unnamed module @0x3029678d) cannot access class jdk.internal.access.SharedSecrets (in module java.base) because module java.base does not export jdk.internal.access to unnamed module @0x3029678d
	at org.jetbrains.kotlinx.lincheck.tran$f*rmed.java.util.EnumSet.getUniverse(EnumSet.java:411)
	at org.jetbrains.kotlinx.lincheck.tran$f*rmed.java.util.EnumSet.noneOf(EnumSet.java:115)
	at org.jetbrains.kotlinx.lincheck.tran$f*rmed.java.util.EnumSet.of(EnumSet.java:264)
	at org.jetbrains.kotlinx.lincheck.tran$f*rmed.java.util.stream.Collectors.<clinit>(Collectors.java:107)
	at shad.Eliseeva_3.second.LockFreeSet.snapshot(LockFreeSet.java:129)
	at shad.Eliseeva_3.second.LockFreeSet.iterator(LockFreeSet.java:92)
	at shad.LincheckLockFreeSetTest.iterator(LincheckLockFreeSetTest.kt:33)
	... 3 more


= The following interleaving leads to the error =
Parallel part trace:
| iterator()                                                                                                |
|   iterator(): threw IllegalAccessError at LincheckLockFreeSetTest.iterator(LincheckLockFreeSetTest.kt:33) |
|     snapshot(): threw IllegalAccessError at LockFreeSet.iterator(LockFreeSet.java:92)                     |
|       getElements(): ArrayList@1 at LockFreeSet.snapshot(LockFreeSet.java:116)                            |
|       getElements(): ArrayList@1 at LockFreeSet.snapshot(LockFreeSet.java:117)                            |
|         root.READ: Node@1 at LockFreeSet.getElements(LockFreeSet.java:136)                                |
|         access$300(Node@1): AtomicMarkableReference@1 at LockFreeSet.getElements(LockFreeSet.java:139)    |
|         get(boolean[]@1): null at LockFreeSet.getElements(LockFreeSet.java:139)                           |
	at org.jetbrains.kotlinx.lincheck.LinChecker.check(LinChecker.kt:51)
	at org.jetbrains.kotlinx.lincheck.LinChecker$Companion.check(LinChecker.kt:182)
	at shad.LincheckLockFreeSetTest.runTest_1(LincheckLockFreeSetTest.kt:48)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38)
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:119)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:182)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:164)
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:414)
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:56)
	at java.base/java.lang.Thread.run(Thread.java:834)

